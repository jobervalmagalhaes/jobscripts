"use strict";(self.webpackChunkjobscripts_site=self.webpackChunkjobscripts_site||[]).push([[916],{6955:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>l,default:()=>$,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"tutoriais/automatize-a-gravacao-de-waypoints-no-elfbot-ng","title":"Automatize a grava\xe7\xe3o de waypoints no ElfBot NG","description":"Aprenda a automatizar a grava\xe7\xe3o de waypoints no ElfBot NG.","source":"@site/docs/tutoriais/automatize-a-gravacao-de-waypoints-no-elfbot-ng.md","sourceDirName":"tutoriais","slug":"/tutoriais/automatize-a-gravacao-de-waypoints-no-elfbot-ng","permalink":"/docs/tutoriais/automatize-a-gravacao-de-waypoints-no-elfbot-ng","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"automatize-a-gravacao-de-waypoints-no-elfbot-ng","title":"Automatize a grava\xe7\xe3o de waypoints no ElfBot NG","sidebar_label":"Automatize a grava\xe7\xe3o de waypoints no ElfBot NG","description":"Aprenda a automatizar a grava\xe7\xe3o de waypoints no ElfBot NG."},"sidebar":"tutorialSidebar","previous":{"title":"Tutoriais","permalink":"/docs/category/tutoriais"},"next":{"title":"Como baixar e instalar o ElfBot NG","permalink":"/docs/tutoriais/como-baixar-e-instalar-o-elfBot-ng"}}');var o=n(4848),a=n(8453);const i={id:"automatize-a-gravacao-de-waypoints-no-elfbot-ng",title:"Automatize a grava\xe7\xe3o de waypoints no ElfBot NG",sidebar_label:"Automatize a grava\xe7\xe3o de waypoints no ElfBot NG",description:"Aprenda a automatizar a grava\xe7\xe3o de waypoints no ElfBot NG."},l=void 0,r={},d=[{value:"Descri\xe7\xe3o Breve",id:"descri\xe7\xe3o-breve",level:2},{value:"Script",id:"script",level:2},{value:"Configura\xe7\xf5es do script",id:"configura\xe7\xf5es-do-script",level:2},{value:"Instru\xe7\xf5es",id:"instru\xe7\xf5es",level:2},{value:"Scripts Adicionais (Opcional)",id:"scripts-adicionais-opcional",level:2},{value:"Tipos de Waypoints",id:"tipos-de-waypoints",level:3},{value:"Dire\xe7\xf5es",id:"dire\xe7\xf5es",level:3},{value:"Exemplos de Scripts",id:"exemplos-de-scripts",level:3},{value:"Stand",id:"stand",level:4},{value:"Walk",id:"walk",level:4},{value:"Node",id:"node",level:4},{value:"Rope",id:"rope",level:4},{value:"Ladder",id:"ladder",level:4},{value:"Shovel",id:"shovel",level:4},{value:"Lure",id:"lure",level:4},{value:"Cr\xe9ditos:",id:"cr\xe9ditos",level:4}];function p(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.p,{children:"Voc\xea est\xe1 cansado de parar a cada poucos segundos para adicionar manualmente waypoints no ElfBot? Este script foi projetado para simplificar sua vida, permitindo que voc\xea adicione waypoints automaticamente enquanto explora o jogo."}),"\n",(0,o.jsx)(s.h2,{id:"descri\xe7\xe3o-breve",children:"Descri\xe7\xe3o Breve"}),"\n",(0,o.jsx)(s.p,{children:"Este script permite que voc\xea se mova pelo spawn sem ter que parar a cada poucos segundos para adicionar manualmente waypoints. Ele adicionar\xe1 os waypoints automaticamente."}),"\n",(0,o.jsx)(s.h2,{id:"script",children:"Script"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'set $mode W\nset $sqm 5\nauto 200 dontlist | foreach \'newmessages\' $reset if [$reset.content == \'reset\' && $reset.sender == $self.name] {filedelete "[$self.name] Temp-Waypoints.txt" | statusmessage "Waypoints cleared."}\nauto 200 dontlist | foreach \'newmessages\' $start if [$start.content == \'start\' && $start.sender == $self.name] {set $px $posx | set $py $posy | set $pz $posz | set $rec 1 | statusmessage "Waypoint recording started."}\nauto 200 dontlist | foreach \'newmessages\' $stop if [$stop.content == \'stop\' && $stop.sender == $self.name] {set $rec 0 | statusmessage "Waypoint recording stopped."}\nauto 200 dontlist | if [$rec == 1 && $posx >= ($px+$sqm)] {set $px $posx | set $py $posy | set $pz $posz | filewriteline "[$self.name] Temp-Waypoints.txt" "$mode $px $py $pz" | statusmessage "Waypoint $px $py [$pz] added."}\nauto 200 dontlist | if [$rec == 1 && $posx =< ($px-$sqm)] {set $px $posx | set $py $posy | set $pz $posz | filewriteline "[$self.name] Temp-Waypoints.txt" "$mode $px $py $pz" | statusmessage "Waypoint $px $py [$pz] added."}\nauto 200 dontlist | if [$rec == 1 && $posy >= ($py+$sqm)] {set $px $posx | set $py $posy | set $pz $posz | filewriteline "[$self.name] Temp-Waypoints.txt" "$mode $px $py $pz" | statusmessage "Waypoint $px $py [$pz] added."}\nauto 200 dontlist | if [$rec == 1 && $posy =< ($py-$sqm)] {set $px $posx | set $py $posy | set $pz $posz | filewriteline "[$self.name] Temp-Waypoints.txt" "$mode $px $py $pz" | statusmessage "Waypoint $px $py [$pz] added."}\n'})}),"\n",(0,o.jsx)(s.p,{children:"Digite no jogo para executar:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"reset: Limpa os waypoints anteriores;"}),"\n",(0,o.jsx)(s.li,{children:"start: Inicia a grava\xe7\xe3o dos waypoints;"}),"\n",(0,o.jsx)(s.li,{children:"stop: Para a grava\xe7\xe3o dos waypoints."}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"configura\xe7\xf5es-do-script",children:"Configura\xe7\xf5es do script"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"set $mode W"}),": Tipo de waypoint a ser gravado. W = Andar, S = Stand, N = Node;"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"set $sqm 5"}),": Adiciona um novo waypoint a cada X SQMs."]}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"instru\xe7\xf5es",children:"Instru\xe7\xf5es"}),"\n",(0,o.jsxs)(s.ol,{children:["\n",(0,o.jsx)(s.li,{children:"Copie e cole o script acima em Hotkeys > Persistent e clique em Save/Restart. Certifique-se de que a caixa Persistent est\xe1 marcada."}),"\n",(0,o.jsx)(s.li,{children:"V\xe1 para onde voc\xea quer que os waypoints comecem e digite no jogo start."}),"\n",(0,o.jsx)(s.li,{children:"Corra pelo mapa, o script adicionar\xe1 um waypoint a cada poucos SQMs."}),"\n",(0,o.jsx)(s.li,{children:"Digite stop quando terminar de adicionar os waypoints."}),"\n",(0,o.jsx)(s.li,{children:"V\xe1 para a pasta de configura\xe7\xf5es do ElfBot (Exemplo de localiza\xe7\xe3o: C:\\Program Files (x86)\\ElfBot NG\\elfsettings)."}),"\n",(0,o.jsx)(s.li,{children:"Procure e abra o arquivo .txt nomeado como CHARACTERNAME Temp-Waypoints."}),"\n",(0,o.jsx)(s.li,{children:"No topo do arquivo, acima do primeiro waypoint, adicione [Waypoints]."}),"\n",(0,o.jsx)(s.li,{children:"Copie e cole o conte\xfado do arquivo em Cavebot > Edit e clique em Load Script.\nPronto! Seus waypoints est\xe3o prontos para uso! Se quiser criar um novo conjunto de waypoints, digite reset."}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"scripts-adicionais-opcional",children:"Scripts Adicionais (Opcional)"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"Esses scripts n\xe3o s\xe3o necess\xe1rios, mas podem ser \xfateis para adicionar waypoints \xfanicos, como subir/descer escadas."}),"\n",(0,o.jsx)(s.li,{children:"Para usar qualquer um desses, copie e cole em Hotkeys > Persistent e depois digite no jogo WAYPOINTTYPE DIRECTION."}),"\n",(0,o.jsx)(s.li,{children:"Exemplo para waypoint de ficar: s n adicionar\xe1 um waypoint de ficar ao norte."}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"tipos-de-waypoints",children:"Tipos de Waypoints"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"s - Stand"}),"\n",(0,o.jsx)(s.li,{children:"w - Walk"}),"\n",(0,o.jsx)(s.li,{children:"n - Node"}),"\n",(0,o.jsx)(s.li,{children:"r - Rope"}),"\n",(0,o.jsx)(s.li,{children:"l - Ladder"}),"\n",(0,o.jsx)(s.li,{children:"h - Shovel"}),"\n",(0,o.jsx)(s.li,{children:"u - Lure"}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"dire\xe7\xf5es",children:"Dire\xe7\xf5es"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"n - Norte (north)"}),"\n",(0,o.jsx)(s.li,{children:"ne - Nordeste (north-east)"}),"\n",(0,o.jsx)(s.li,{children:"e - Leste (east)"}),"\n",(0,o.jsx)(s.li,{children:"se - Sudeste (south-east)"}),"\n",(0,o.jsx)(s.li,{children:"s - Sul (south)"}),"\n",(0,o.jsx)(s.li,{children:"sw - Sudoeste (south-west)"}),"\n",(0,o.jsx)(s.li,{children:"w - Oeste (west)"}),"\n",(0,o.jsx)(s.li,{children:"nw - Noroeste (north-west)"}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"exemplos-de-scripts",children:"Exemplos de Scripts"}),"\n",(0,o.jsx)(s.h4,{id:"stand",children:"Stand"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'auto 1 dontlist | foreach \'newmessages\' $stand if [$stand.sender == $self.name && $stand.content == \'st\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "S $posx $posy $posz" | statusmessage "Recorded Stand waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $standc if [$standc.sender == $self.name && $standc.content == \'st c\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "S $posx $posy $posz" | statusmessage "Recorded Stand (CENTER) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $standn if [$standn.sender == $self.name && $standn.content == \'st n\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "S $posx [$posy-1] $posz" | statusmessage "Recorded Stand (NORTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $standne if [$standne.sender == $self.name && $standne.content == \'st ne\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "S [$posx+1] [$posy-1] $posz" | statusmessage "Recorded Stand (NORTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $stande if [$stande.sender == $self.name && $stande.content == \'st e\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "S [$posx+1] $posy $posz" | statusmessage "Recorded Stand (EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $standse if [$standse.sender == $self.name && $standse.content == \'st se\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "S [$posx+1] [$posy+1] $posz" | statusmessage "Recorded Stand (SOUTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $stands if [$stands.sender == $self.name && $stands.content == \'st s\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "S $posx [$posy+1] $posz" | statusmessage "Recorded Stand (SOUTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $standsw if [$standsw.sender == $self.name && $standsw.content == \'st sw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "S [$posx-1] [$posy+1] $posz" | statusmessage "Recorded Stand (SOUTH-WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $standw if [$standw.sender == $self.name && $standw.content == \'st w\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "S [$posx-1] $posy $posz" | statusmessage "Recorded Stand (WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $standnw if [$standnw.sender == $self.name && $standnw.content == \'st nw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "S [$posx-1] [$posy-1] $posz" | statusmessage "Recorded Stand (NORTH-WEST) waypoint."}\n'})}),"\n",(0,o.jsx)(s.h4,{id:"walk",children:"Walk"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'auto 1 dontlist | foreach \'newmessages\' $walk if [$walk.sender == $self.name && $walk.content == \'w\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "W $posx $posy $posz" | statusmessage "Recorded Walk waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $walkc if [$walkc.sender == $self.name && $walkc.content == \'w c\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "W $posx $posy $posz" | statusmessage "Recorded Walk (CENTER) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $walkn if [$walkn.sender == $self.name && $walkn.content == \'w n\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "W $posx [$posy-1] $posz" | statusmessage "Recorded Walk (NORTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $walkne if [$walkne.sender == $self.name && $walkne.content == \'w ne\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "W [$posx+1] [$posy-1] $posz" | statusmessage "Recorded Walk (NORTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $walke if [$walke.sender == $self.name && $walke.content == \'w e\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "W [$posx+1] $posy $posz" | statusmessage "Recorded Walk (EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $walkse if [$walkse.sender == $self.name && $walkse.content == \'w se\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "W [$posx+1] [$posy+1] $posz" | statusmessage "Recorded Walk (SOUTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $walks if [$walks.sender == $self.name && $walks.content == \'w s\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "W $posx [$posy+1] $posz" | statusmessage "Recorded Walk (SOUTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $walksw if [$walksw.sender == $self.name && $walksw.content == \'w sw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "W [$posx-1] [$posy+1] $posz" | statusmessage "Recorded Walk (SOUTH-WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $walkw if [$walkw.sender == $self.name && $walkw.content == \'w w\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "W [$posx-1] $posy $posz" | statusmessage "Recorded Walk (WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $walknw if [$walknw.sender == $self.name && $walknw.content == \'w nw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "W [$posx-1] [$posy-1] $posz" | statusmessage "Recorded Walk (NORTH-WEST) waypoint."}\n'})}),"\n",(0,o.jsx)(s.h4,{id:"node",children:"Node"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'auto 1 dontlist | foreach \'newmessages\' $node if [$node.sender == $self.name && $node.content == \'n\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "N $posx $posy $posz" | statusmessage "Recorded Node waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $nodec if [$nodec.sender == $self.name && $nodec.content == \'n c\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "N $posx $posy $posz" | statusmessage "Recorded Node (CENTER) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $noden if [$noden.sender == $self.name && $noden.content == \'n n\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "N $posx [$posy-1] $posz" | statusmessage "Recorded Node (NORTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $nodene if [$nodene.sender == $self.name && $nodene.content == \'n ne\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "N [$posx+1] [$posy-1] $posz" | statusmessage "Recorded Node (NORTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $nodee if [$nodee.sender == $self.name && $nodee.content == \'n e\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "N [$posx+1] $posy $posz" | statusmessage "Recorded Node (EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $nodese if [$nodese.sender == $self.name && $nodese.content == \'n se\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "N [$posx+1] [$posy+1] $posz" | statusmessage "Recorded Node (SOUTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $nodes if [$nodes.sender == $self.name && $nodes.content == \'n s\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "N $posx [$posy+1] $posz" | statusmessage "Recorded Node (SOUTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $nodesw if [$nodesw.sender == $self.name && $nodesw.content == \'n sw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "N [$posx-1] [$posy+1] $posz" | statusmessage "Recorded Node (SOUTH-WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $nodew if [$nodew.sender == $self.name && $nodew.content == \'n w\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "N [$posx-1] $posy $posz" | statusmessage "Recorded Node (WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $nodenw if [$nodenw.sender == $self.name && $nodenw.content == \'n nw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "N [$posx-1] [$posy-1] $posz" | statusmessage "Recorded Node (NORTH-WEST) waypoint."}\n'})}),"\n",(0,o.jsx)(s.h4,{id:"rope",children:"Rope"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'auto 1 dontlist | foreach \'newmessages\' $rope if [$rope.sender == $self.name && $rope.content == \'r\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "R $posx $posy $posz" | statusmessage "Recorded Rope waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ropec if [$ropec.sender == $self.name && $ropec.content == \'r c\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "R $posx $posy $posz" | statusmessage "Recorded Rope (CENTER) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ropen if [$ropen.sender == $self.name && $ropen.content == \'r n\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "R $posx [$posy-1] $posz" | statusmessage "Recorded Rope (NORTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ropene if [$ropene.sender == $self.name && $ropene.content == \'r ne\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "R [$posx+1] [$posy-1] $posz" | statusmessage "Recorded Rope (NORTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ropee if [$ropee.sender == $self.name && $ropee.content == \'r e\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "R [$posx+1] $posy $posz" | statusmessage "Recorded Rope (EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ropese if [$ropese.sender == $self.name && $ropese.content == \'r se\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "R [$posx+1] [$posy+1] $posz" | statusmessage "Recorded Rope (SOUTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ropes if [$ropes.sender == $self.name && $ropes.content == \'r s\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "R $posx [$posy+1] $posz" | statusmessage "Recorded Rope (SOUTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ropesw if [$ropesw.sender == $self.name && $ropesw.content == \'r sw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "R [$posx-1] [$posy+1] $posz" | statusmessage "Recorded Rope (SOUTH-WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ropew if [$ropew.sender == $self.name && $ropew.content == \'r w\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "R [$posx-1] $posy $posz" | statusmessage "Recorded Rope (WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ropenw if [$ropenw.sender == $self.name && $ropenw.content == \'r nw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "R [$posx-1] [$posy-1] $posz" | statusmessage "Recorded Rope (NORTH-WEST) waypoint."}\n'})}),"\n",(0,o.jsx)(s.h4,{id:"ladder",children:"Ladder"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'auto 1 dontlist | foreach \'newmessages\' $ladder if [$ladder.sender == $self.name && $ladder.content == \'l\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "L $posx $posy $posz" | statusmessage "Recorded Ladder waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ladderc if [$ladderc.sender == $self.name && $ladderc.content == \'l c\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "L $posx $posy $posz" | statusmessage "Recorded Ladder (CENTER) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $laddern if [$laddern.sender == $self.name && $laddern.content == \'l n\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "L $posx [$posy-1] $posz" | statusmessage "Recorded Ladder (NORTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ladderne if [$ladderne.sender == $self.name && $ladderne.content == \'l ne\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "L [$posx+1] [$posy-1] $posz" | statusmessage "Recorded Ladder (NORTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $laddere if [$laddere.sender == $self.name && $laddere.content == \'l e\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "L [$posx+1] $posy $posz" | statusmessage "Recorded Ladder (EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ladderse if [$ladderse.sender == $self.name && $ladderse.content == \'l se\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "L [$posx+1] [$posy+1] $posz" | statusmessage "Recorded Ladder (SOUTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ladders if [$ladders.sender == $self.name && $ladders.content == \'l s\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "L $posx [$posy+1] $posz" | statusmessage "Recorded Ladder (SOUTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $laddersw if [$laddersw.sender == $self.name && $laddersw.content == \'l sw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "L [$posx-1] [$posy+1] $posz" | statusmessage "Recorded Ladder (SOUTH-WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $ladderw if [$ladderw.sender == $self.name && $ladderw.content == \'l w\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "L [$posx-1] $posy $posz" | statusmessage "Recorded Ladder (WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $laddernw if [$laddernw.sender == $self.name && $laddernw.content == \'l nw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "L [$posx-1] [$posy-1] $posz" | statusmessage "Recorded Ladder (NORTH-WEST) waypoint."}\n'})}),"\n",(0,o.jsx)(s.h4,{id:"shovel",children:"Shovel"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'auto 1 dontlist | foreach \'newmessages\' $shovel if [$shovel.sender == $self.name && $shovel.content == \'h\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "H $posx $posy $posz" | statusmessage "Recorded Shovel waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $shovelc if [$shovelc.sender == $self.name && $shovelc.content == \'h c\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "H $posx $posy $posz" | statusmessage "Recorded Shovel (CENTER) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $shoveln if [$shoveln.sender == $self.name && $shoveln.content == \'h n\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "H $posx [$posy-1] $posz" | statusmessage "Recorded Shovel (NORTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $shovelne if [$shovelne.sender == $self.name && $shovelne.content == \'h ne\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "H [$posx+1] [$posy-1] $posz" | statusmessage "Recorded Shovel (NORTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $shovele if [$shovele.sender == $self.name && $shovele.content == \'h e\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "H [$posx+1] $posy $posz" | statusmessage "Recorded Shovel (EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $shovelse if [$shovelse.sender == $self.name && $shovelse.content == \'h se\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "H [$posx+1] [$posy+1] $posz" | statusmessage "Recorded Shovel (SOUTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $shovels if [$shovels.sender == $self.name && $shovels.content == \'h s\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "H $posx [$posy+1] $posz" | statusmessage "Recorded Shovel (SOUTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $shovelsw if [$shovelsw.sender == $self.name && $shovelsw.content == \'h sw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "H [$posx-1] [$posy+1] $posz" | statusmessage "Recorded Shovel (SOUTH-WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $shovelw if [$shovelw.sender == $self.name && $shovelw.content == \'h w\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "H [$posx-1] $posy $posz" | statusmessage "Recorded Shovel (WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $shovelnw if [$shovelnw.sender == $self.name && $shovelnw.content == \'h nw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "H [$posx-1] [$posy-1] $posz" | statusmessage "Recorded Shovel (NORTH-WEST) waypoint."}\n'})}),"\n",(0,o.jsx)(s.h4,{id:"lure",children:"Lure"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'auto 1 dontlist | foreach \'newmessages\' $lure if [$lure.sender == $self.name && $lure.content == \'u\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "U $posx $posy $posz" | statusmessage "Recorded Lure waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $lurec if [$lurec.sender == $self.name && $lurec.content == \'u c\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "U $posx $posy $posz" | statusmessage "Recorded Lure (CENTER) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $luren if [$luren.sender == $self.name && $luren.content == \'u n\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "U $posx [$posy-1] $posz" | statusmessage "Recorded Lure (NORTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $lurene if [$lurene.sender == $self.name && $lurene.content == \'u ne\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "U [$posx+1] [$posy-1] $posz" | statusmessage "Recorded Lure (NORTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $luree if [$luree.sender == $self.name && $luree.content == \'u e\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "U [$posx+1] $posy $posz" | statusmessage "Recorded Lure (EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $lurese if [$lurese.sender == $self.name && $lurese.content == \'u se\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "U [$posx+1] [$posy+1] $posz" | statusmessage "Recorded Lure (SOUTH-EAST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $lures if [$lures.sender == $self.name && $lures.content == \'u s\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "U $posx [$posy+1] $posz" | statusmessage "Recorded Lure (SOUTH) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $luresw if [$luresw.sender == $self.name && $luresw.content == \'u sw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "U [$posx-1] [$posy+1] $posz" | statusmessage "Recorded Lure (SOUTH-WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $lurew if [$lurew.sender == $self.name && $lurew.content == \'u w\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "U [$posx-1] $posy $posz" | statusmessage "Recorded Lure (WEST) waypoint."}\nauto 1 dontlist | foreach \'newmessages\' $lurenw if [$lurenw.sender == $self.name && $lurenw.content == \'u nw\'] {filewriteline "[$self.name] Temp-Waypoints.txt" "U [$posx-1] [$posy-1] $posz" | statusmessage "Recorded Lure (NORTH-WEST) waypoint."}\n'})}),"\n",(0,o.jsx)(s.p,{children:"Agora voc\xea pode automatizar a grava\xe7\xe3o de waypoints no ElfBot, economizando tempo e esfor\xe7o enquanto explora novas caves. Aproveite!"}),"\n",(0,o.jsx)(s.h4,{id:"cr\xe9ditos",children:"Cr\xe9ditos:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"https://www.elfbot.com.br/2024/07/automatize-gravacao-de-waypoints-no-elfbot.html",children:"Gabriel Gomes (elfbot.com.br)"})}),"\n"]})]})}function $(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>l});var t=n(6540);const o={},a=t.createContext(o);function i(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);